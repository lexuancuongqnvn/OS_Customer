#pragma checksum "D:\SourceCode\ERP\RELEASE\core\ERP.Web\FaceAPI\FaceAPI\Views\FaceAPI\Index.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "bdca5a8502f63f45d0ef1f758f84e9f9afa92804e3707093e407ed4b3e2e00da"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_FaceAPI_Index), @"mvc.1.0.view", @"/Views/FaceAPI/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\SourceCode\ERP\RELEASE\core\ERP.Web\FaceAPI\FaceAPI\Views\_ViewImports.cshtml"
using FaceAPI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\SourceCode\ERP\RELEASE\core\ERP.Web\FaceAPI\FaceAPI\Views\_ViewImports.cshtml"
using FaceAPI.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"bdca5a8502f63f45d0ef1f758f84e9f9afa92804e3707093e407ed4b3e2e00da", @"/Views/FaceAPI/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"fc4d04be7ee50a5fd220e8f033ffa41a683d13fbcf1b8b72fb3d7757feaa7aa2", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_FaceAPI_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"  <div id=""navbar""></div>
  <div class=""center-content page-container"">
    <div>
      <div class=""progress"" id=""loader"">
        <div class=""indeterminate""></div>
      </div>
      <div class=""row side-by-side"">
        <div class=""center-content"">
          <img id=""face1""");
            BeginWriteAttribute("src", " src=\"", 415, "\"", 421, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"margin\"/>\r\n          <div id=\"selectList1\"></div>\r\n        </div>\r\n        <div class=\"center-content\">\r\n          <img id=\"face2\"");
            BeginWriteAttribute("src", " src=\"", 560, "\"", 566, 0);
            EndWriteAttribute();
            WriteLiteral(@" class=""margin""/>
          <div id=""selectList2""></div>
        </div>
      </div>
      <div class=""row"">
        <label for=""distance"">Distance:</label>
        <input disabled value=""-"" id=""distance"" type=""text"" class=""bold"">
      </div>

    </div>
  </div>

  <script>
    const threshold = 0.6
    let descriptors = { desc1: null, desc2: null }

    function updateResult() {
      const distance = faceapi.utils.round(
        faceapi.euclideanDistance(descriptors.desc1, descriptors.desc2)
      )
      let text = distance
      let bgColor = '#ffffff'
      if (distance > threshold) {
        text += ' (no match)'
        bgColor = '#ce7575'
      }
      $('#distance').val(text)
      $('#distance').css('background-color', bgColor)
    }

    async function onSelectionChanged(which, uri) {
      const input = await faceapi.fetchImage(uri)
      const imgEl = $(`#face${which}`).get(0)
      imgEl.src = input.src
      descriptors[`desc${which}`] = await faceapi.compute");
            WriteLiteral(@"FaceDescriptor(input)
    }

    async function run() {
      await  faceapi.loadFaceRecognitionModel()
      $('#loader').hide()
      await onSelectionChanged(1, $('#selectList1 select').val())
      await onSelectionChanged(2, $('#selectList2 select').val())
      updateResult()
    }

    $(document).ready(function() {
      renderNavBar('#navbar', 'bbt_face_similarity')
      renderFaceImageSelectList(
        '#selectList1',
        async (uri) => {
          await onSelectionChanged(1, uri)
          updateResult()
        },
        { className: 'sheldon', imageIdx: 1 }
      )

      renderFaceImageSelectList(
        '#selectList2',
        async (uri) => {
          await onSelectionChanged(2, uri)
          updateResult()
        },
        { className: 'howard', imageIdx: 1 }
      )
      run()
    })

  </script>
");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
